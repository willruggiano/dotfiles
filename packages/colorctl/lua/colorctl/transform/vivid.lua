local template = [[
# Generated by colorctl.
colors:
  bg: '$bg'
  fg: '$fg'

core:
  normal_text:
    foreground: fg
  regular_file:
    foreground: fg
  reset_to_normal: {}

  directory:
    foreground: '$directory_fg'
  symlink:
    foreground: fg
  multi_hard_link:
    foreground: fg
  fifo:
    foreground: fg
  socket:
    foreground: fg
  door:
    foreground: fg
  block_device:
    foreground: fg
  character_device:
    foreground: fg
  broken_symlink:
    foreground: '$bad_fg'
    background: '$bad_bg'
  missing_symlink_target:
    foreground: '$bad_fg'
    background: '$bad_bg'
  setuid:
    foreground: fg
  setgid:
    foreground: fg
  file_with_capability:
    foreground: fg
  sticky_other_writable:
    foreground: fg
  other_writable:
    foreground: fg
  sticky:
    foreground: fg
  executable_file:
    foreground: fg

text:
  special:
    foreground: fg
  todo:
    foreground: '$todo_fg'
    background: '$todo_bg'
    font-style: '$todo_style'
  licenses:
    foreground: fg
  configuration:
    foreground: fg
    nix:
      foreground: '$nix'
  other:
    foreground: fg

markup:
  foreground: fg

programming:
  foreground: fg
  source:
    foreground: fg
    cxx:
      foreground: '$cxx'
    lua:
      foreground: '$lua'
    shell:
      foreground: '$shell'
    viml:
      foreground: '$vim'

media:
  foreground: fg

office:
  foreground: fg

archives:
  foreground: fg

executable:
  foreground: fg
  font-style: bold

unimportant:
  foreground: fg
]]

local helpers = require "shipwright.transform.helpers"
local utils = require "colorctl.utils"

local check_keys = {
  "bg",
  "bad_fg",
  "bad_bg",
  "directory_fg",
  "cxx",
  "lua",
  "nix",
  "shell",
  "vim",
  "todo_fg",
  "todo_bg",
  "todo_style",
}

local function transform(colors)
  utils.check_keys("vivid", colors, check_keys)
  return helpers.split_newlines(helpers.apply_template(template, colors))
end

return transform
