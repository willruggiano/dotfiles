diff --git a/runtime/doc/options.txt b/runtime/doc/options.txt
index 77aa2940275a..ae4f570fe513 100644
--- a/runtime/doc/options.txt
+++ b/runtime/doc/options.txt
@@ -2528,6 +2528,11 @@ A jump table for the options with a short description can be found at |Q_op|.
 	    "[1-9]":      to display a fixed number of columns
 	See |folding|.

+						*'foldcolumndigits'* *'fdcd'*
+'foldcolumndigits' 'fdcd'	boolean (default on)
+			local to window
+	Enable digits shown to indicate the nesting level.
+
 			*'foldenable'* *'fen'* *'nofoldenable'* *'nofen'*
 'foldenable' 'fen'	boolean (default on)
 			local to window
diff --git a/runtime/doc/vim_diff.txt b/runtime/doc/vim_diff.txt
index 85b44e3b5159..228732b78dda 100644
--- a/runtime/doc/vim_diff.txt
+++ b/runtime/doc/vim_diff.txt
@@ -234,6 +234,7 @@ Options:
   'fillchars'   flags: "msgsep" (see 'display'), "horiz", "horizup",
                 "horizdown", "vertleft", "vertright", "verthoriz"
   'foldcolumn'  supports up to 9 dynamic/fixed columns
+  'foldcolumndigits' toggles digits shown in fold column
   'inccommand'  shows interactive results for |:substitute|-like commands
   'laststatus'  global statusline support
   'pumblend'    pseudo-transparent popupmenu
diff --git a/src/nvim/buffer_defs.h b/src/nvim/buffer_defs.h
index b5980612f8f4..94ba3e342c4b 100644
--- a/src/nvim/buffer_defs.h
+++ b/src/nvim/buffer_defs.h
@@ -195,6 +195,8 @@ typedef struct {
 #define w_p_fdt w_onebuf_opt.wo_fdt   // 'foldtext'
   char_u *wo_fmr;
 #define w_p_fmr w_onebuf_opt.wo_fmr    // 'foldmarker'
+  int wo_fdcd;
+#define w_p_fdcd w_onebuf_opt.wo_fdcd    // 'foldcolumndigits'
   int wo_lbr;
 #define w_p_lbr w_onebuf_opt.wo_lbr    // 'linebreak'
   int wo_list;
diff --git a/src/nvim/option.c b/src/nvim/option.c
index 0d02bae5f758..6c8d5d98acf7 100644
--- a/src/nvim/option.c
+++ b/src/nvim/option.c
@@ -5558,6 +5558,7 @@ int makefoldset(FILE *fd)
       || put_setnum(fd, "setlocal", "fdl", &curwin->w_p_fdl) == FAIL
       || put_setnum(fd, "setlocal", "fml", &curwin->w_p_fml) == FAIL
       || put_setnum(fd, "setlocal", "fdn", &curwin->w_p_fdn) == FAIL
+      || put_setbool(fd, "setlocal", "fdcd", curwin->w_p_fdcd) == FAIL
       || put_setbool(fd, "setlocal", "fen",
                      curwin->w_p_fen) == FAIL) {
     return FAIL;
@@ -6021,6 +6022,8 @@ static char_u *get_varp(vimoption_T *p)
     return (char_u *)&(curwin->w_p_fml);
   case PV_FDN:
     return (char_u *)&(curwin->w_p_fdn);
+  case PV_FDCD:
+    return (char_u *)&(curwin->w_p_fdcd);
   case PV_FDE:
     return (char_u *)&(curwin->w_p_fde);
   case PV_FDT:
@@ -6274,6 +6277,7 @@ void copy_winopt(winopt_T *from, winopt_T *to)
   to->wo_fdn = from->wo_fdn;
   to->wo_fde = vim_strsave(from->wo_fde);
   to->wo_fdt = vim_strsave(from->wo_fdt);
+  to->wo_fdcd = from->wo_fdcd;
   to->wo_fmr = vim_strsave(from->wo_fmr);
   to->wo_scl = vim_strsave(from->wo_scl);
   to->wo_winhl = vim_strsave(from->wo_winhl);
diff --git a/src/nvim/option_defs.h b/src/nvim/option_defs.h
index 0dc4bd1b903f..5f4587119ca0 100644
--- a/src/nvim/option_defs.h
+++ b/src/nvim/option_defs.h
@@ -865,6 +865,7 @@ enum {
   WV_FDM,
   WV_FML,
   WV_FDN,
+  WV_FDCD,
   WV_FDE,
   WV_FDT,
   WV_FMR,
diff --git a/src/nvim/options.lua b/src/nvim/options.lua
index a0fbf8d9f072..0593e1a09f01 100644
--- a/src/nvim/options.lua
+++ b/src/nvim/options.lua
@@ -861,6 +861,13 @@ return {
       redraw={'current_window'},
       defaults={if_true="0"}
     },
+    {
+      full_name='foldcolumndigits', abbreviation='fdcd',
+      short_desc=N_("enable digits shown to indicate the nesting level"),
+      type='bool', scope={'window'},
+      redraw={'current_window'},
+      defaults={if_true=true}
+    },
     {
       full_name='foldenable', abbreviation='fen',
       short_desc=N_("set to display all folds open"),
diff --git a/src/nvim/screen.c b/src/nvim/screen.c
index d88975fa780a..62e9bb19f496 100644
--- a/src/nvim/screen.c
+++ b/src/nvim/screen.c
@@ -1925,7 +1925,7 @@ static size_t fill_foldcolumn(char_u *p, win_T *wp, foldinfo_T foldinfo, linenr_
     if (foldinfo.fi_lnum == lnum
         && first_level + i >= foldinfo.fi_low_level) {
       symbol = wp->w_p_fcs_chars.foldopen;
-    } else if (first_level == 1) {
+    } else if (first_level == 1 || (first_level >= 1 && wp->w_p_fdcd == 0)) {
       symbol = wp->w_p_fcs_chars.foldsep;
     } else if (first_level + i <= 9) {
       symbol = '0' + first_level + i;
diff --git a/test/functional/ui/fold_spec.lua b/test/functional/ui/fold_spec.lua
index 394f2f5f49f0..971bcb7f3c33 100644
--- a/test/functional/ui/fold_spec.lua
+++ b/test/functional/ui/fold_spec.lua
@@ -1818,6 +1818,93 @@ describe("folded lines", function()
         ]])
       end
     end)
+
+    it('disables fold level digits #17446', function()
+      funcs.setline(1, 'function a() {')
+      funcs.setline(2, '	function b() {')
+      funcs.setline(3, '		function c() {')
+      funcs.setline(4, '			function d() {')
+      funcs.setline(5, '			}')
+      funcs.setline(6, '		}')
+      funcs.setline(7, '	}')
+      funcs.setline(8, '}')
+
+      command('set foldcolumn=auto foldlevel=999 foldmethod=indent')
+      if multigrid then
+        screen:expect([[
+          ## grid 1
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [3:---------------------------------------------]|
+          ## grid 2
+            {7: }^function a() {                              |
+            {7:-}        function b() {                      |
+            {7:-}                function c() {              |
+            {7:-}                        function d() {      |
+            {7:3}                        }                   |
+            {7:2}                }                           |
+            {7:│}        }                                   |
+
+          ## grid 3
+                                                         |
+        ]])
+      else
+        screen:expect([[
+          {7: }^function a() {                              |
+          {7:-}        function b() {                      |
+          {7:-}                function c() {              |
+          {7:-}                        function d() {      |
+          {7:3}                        }                   |
+          {7:2}                }                           |
+          {7:│}        }                                   |
+                                                       |
+        ]])
+      end
+
+      command('set nofoldcolumndigits')
+      if multigrid then
+        screen:expect([[
+          ## grid 1
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [2:---------------------------------------------]|
+            [3:---------------------------------------------]|
+          ## grid 2
+            {7: }^function a() {                              |
+            {7:-}        function b() {                      |
+            {7:-}                function c() {              |
+            {7:-}                        function d() {      |
+            {7:│}                        }                   |
+            {7:│}                }                           |
+            {7:│}        }                                   |
+
+          ## grid 3
+                                                         |
+        ]])
+      else
+        screen:expect([[
+          {7: }^function a() {                              |
+          {7:-}        function b() {                      |
+          {7:-}                function c() {              |
+          {7:-}                        function d() {      |
+          {7:│}                        }                   |
+          {7:│}                }                           |
+          {7:│}        }                                   |
+                                                       |
+        ]])
+      end
+
+      assert_alive()
+    end)
   end

   describe("with ext_multigrid", function()
