{
  config,
  lib,
  pkgs,
  ...
}:
with lib; let
  cfg = config.programs.git;
  json = pkgs.formats.json {};
  toml = pkgs.formats.toml {};
  yaml = pkgs.formats.yaml {};

  email = "mix.spend.dough@usecloaked.com";
  name = "Will Ruggiano";
  signingkey = "~/.ssh/id_ed25519.pub";
in {
  config = mkIf cfg.enable {
    programs.git = {
      config = {
        advice.detachedHead = false;
        alias = {
          can = "commit -a --amend --no-edit";
          ss = "sync 'stack()'";
          stack = "!spr";
        };
        color.ui = "auto";
        commit.gpgsign = true;
        core = {
          attributesfile = config.environment.etc.gitattributes.source;
          excludesfile = config.environment.etc.gitignore.source;
          pager = "delta";
        };
        credential = {
          "https://github.com" = {
            helper = "!gh auth git-credential";
          };
        };
        delta = {
          navigate = true; # use n and N to move between diff sections
          side-by-side = true;
          whitespace-error-style = "22 reverse";
        };
        diff.external = "difft";
        gpg.format = "ssh";
        gpg.ssh.allowedSignersFile = config.environment.etc.gitsigners.source;
        init.defaultBranch = "main";
        interactive.diffFilter = "delta --color-only";
        lfs.enable = true;
        merge = {
          conflictStyle = "zdiff3";
          keepBackup = false;
          tool = "nvim";
          # driverz
          mergiraf = {
            name = "mergiraf";
            driver = "mergiraf merge --git %O %A %B -s %S -x %X -y %Y -p %P";
          };
        };
        mergetool = {
          keepBackup = false;
          prompt = false; # run the mergetool immediately
          push.followTags = true;
          # toolz
          diffview.cmd = "nvim +DiffviewOpen";
          fugitive.cmd = ''nvim -f -c "Gdiffsplit!" $MERGED'';
          nvim.cmd = "nvim -d $LOCAL $MERGED $REMOTE";
          smerge.cmd = "smerge $MERGED";
        };
        push.autoSetupRemote = true;
        rebase = {
          autoSquash = true;
          autoStash = true;
          stat = true;
        };
        spr = {
          requireTestPlan = false;
        };
        user = {
          inherit email name signingkey;
        };
      };
    };

    environment = {
      interactiveShellInit = ''
        export GH_TOKEN="$(cat ${config.age.secrets."willruggiano@github".path})"
      '';

      systemPackages = with pkgs; [
        delta
        difftastic
        gh
        git-absorb
        git-branchless
        git-crypt
        git-lfs
        git-quickfix
        git-trim
        gitflow
        jjui
        lazygit
        mergiraf
        rs-git-fsmonitor
        spr
        sublime-merge
        watchman
        (pkgs.writeShellApplication {
          name = "git";
          text = ''
            if [[ $# -eq 0 ]]; then
                lazygit
            else
                ${cfg.package}/bin/git "$@"
            fi
          '';
        })
      ];

      etc = {
        "gitattributes".text = ''
          # generated by nix
          *.c merge=mergiraf
          *.cc merge=mergiraf
          *.cpp merge=mergiraf
          *.cs merge=mergiraf
          *.dart merge=mergiraf
          *.go merge=mergiraf
          *.h merge=mergiraf
          *.hpp merge=mergiraf
          *.htm merge=mergiraf
          *.html merge=mergiraf
          *.java merge=mergiraf
          *.js merge=mergiraf
          *.json merge=mergiraf
          *.jsx merge=mergiraf
          *.py merge=mergiraf
          *.rs merge=mergiraf
          *.sbt merge=mergiraf
          *.scala merge=mergiraf
          *.ts merge=mergiraf
          *.xhtml merge=mergiraf
          *.xml merge=mergiraf
          *.yaml merge=mergiraf
          *.yml merge=mergiraf
        '';
        "gitignore".text = ''
          # generated by nix
          .envrc
          .devenv/
          .direnv/
          # https://github.com/block/goose
          .goose/
        '';
        "gitsigners".text = ''
          bombadil@ecthelion ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEWXJHDkOTwqq+3W5JgBxGWyDNlhxVcQB/2lwBRwg8/f
          bombadil@mothership ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIERAQpJ3mjcz+b2Y+Wf598wURIrGU710Sr91HCcwSiXS
        '';
        "watchman.json".source = json.generate "watchman.json" {
          root_files = [".watchmanconfig"];
        };
      };

      variables.LG_CONFIG_FILE = "$HOME/.config/lazygit/config.yml,$HOME/.config/lazygit/theme.yml";
    };

    home = {
      configFile = {
        "jj/config.toml".source = toml.generate "config.toml" {
          aliases.advance = ["bookmark" "move" "main" "--to" "@-"];
          signing = {
            behavior = "own";
            backend = "ssh";
            key = signingkey;
          };
          signing.backends.ssh.allowed-signers = config.environment.etc.gitsigners.source;
          ui = {
            paginate = "never";
            default-command = "status";
            diff-editor = ["nvim" "-c" "DiffEditor $left $right $output"];
          };
          user = {
            inherit email name;
          };
        };
        "lazygit/config.yml".source = yaml.generate "lazygit-config" {
          git = {
            autoFetch = false;
            overrideGpg = true;
            paging.externalDiffCommand = "difft --color=always";
          };
        };
      };
      dataFile = {
        "dark-mode.d/lazygit".source = pkgs.writeShellScript "dark-lazygit" ''
          ${pkgs.coreutils}/bin/ln -sf ${./lazygit-doom-one-dark.yml} "$HOME/.config/lazygit/theme.yml"
        '';
        "light-mode.d/lazygit".source = pkgs.writeShellScript "light-lazygit" ''
          ${pkgs.coreutils}/bin/ln -sf ${./lazygit-doom-one-light.yml} "$HOME/.config/lazygit/theme.yml"
        '';
      };
    };
  };
}
